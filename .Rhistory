install.packages('mplusautomation')
install.packages('MplusAutomation', Ncpus=7)
install.packages('knitr', Ncpus=7)
install.packages(c('dplyr','tidyr'), Ncpus=7)
setwd('E:/Projects/LnT_Values/')
setwd('E:/Projects/LnT_Values/')
library(MplusAutomation)
library(knitr)
library(dplyr)
library(tidyr)
createModels('code/PxVx_UniTemplate.inp')
createModels('code/PxVx_UniTemplate.inp')
createModels('code/PxVx_UniTemplate.inp')
createModels('code/PxVx_UniTemplate.inp')
createModels('code/PxVx_UniTemplate.inp')
createModels('code/PxVx_UniTemplate.inp')
createModels('code/PxVx_UniTemplate.inp')
createModels('code/PxVx_UniTemplate.inp')
setwd('E:/Projects/LnT_Values/Rez/model_syntax')
runModels(recursive = T)
warnings()
setwd('E:/Projects/LnT_Values/Rez/model_syntax')
runModels(recursive = T)
warnings()
setwd('E:/Projects/LnT_Values/')
library(MplusAutomation)
library(knitr)
library(dplyr)
library(tidyr)
createModels('code/PxVx_UniTemplate.inp')
createModels('code/PxVx_UniTemplate.inp')
setwd('E:/Projects/LnT_Values/Rez/model_syntax')
runModels(recursive = T)
1- pchisq(1.3736, 4)
pchisq(1.3736, 4)
1-pchisq(1.3736, 4)
1-pchisq(5.3736, 4)
1-pchisq(10.3736, 4)
1-pchisq(1.3736, 4)
setwd('E:/Projects/LnT_Values/Rez/model_syntax')
uniModelOut<-readModels(recursive = T,
filefilter='ALT.*')
save(uniModelOut,file=saveUniFN)
saveUniFN<-'E:/Projects/LnT_Values/Rez/uniMods.RData'
save(uniModelOut,file=saveUniFN)
load(saveUniFN)
warnings()
createModels('code/PxVx_UniTemplate.inp')
setwd('E:/Projects/LnT_Values/')
library(MplusAutomation)
library(knitr)
library(dplyr)
library(tidyr)
createModels('code/PxVx_UniTemplate.inp')
runModels(recursive = T)
saveUniFN<-'E:/Projects/LnT_Values/Rez/uniMods.RData'
setwd('E:/Projects/LnT_Values/Rez/univariate')
runModels(recursive = T)
saveUniFN<-'E:/Projects/LnT_Values/Rez/uniMods.RData'
# Read models
setwd('E:/Projects/LnT_Values/Rez/model_syntax')
uniModelOut<-readModels(recursive = T,
filefilter='ALT.*')
save(uniModelOut,file=saveUniFN)
load(saveUniFN)
str(uniModelOut)
uniModelOut[1]
uniModelOut_df <- as_data_frame(uniModelOut)
uniModelOut_df
str(uniModelOut_df)
uniModelOut_df <- as_data_frame(t(uniModelOut))
uniModelOut_df <- data_frame(model=uniModelOut)
save(uniModelOut_df,file=saveUniFN)
saveUniFN<-'E:/Projects/LnT_Values/Rez/uniMods.RData'
setwd('E:/Projects/LnT_Values/')
library(MplusAutomation)
library(knitr)
library(dplyr)
library(tidyr)
saveUniFN<-'E:/Projects/LnT_Values/Rez/uniMods.RData'
# # Create Models
# createModels('code/PxVx_UniTemplate.inp')
#
# setwd('E:/Projects/LnT_Values/Rez/univariate')
# runModels(recursive = T)
# # Read models
# setwd('E:/Projects/LnT_Values/Rez/model_syntax')
# uniModelOut<-readModels(recursive = T,
#                         filefilter='ALT.*')
# uniModelOut_df <- data_frame(model=uniModelOut)
# save(uniModelOut_df,file=saveUniFN)
load(saveUniFN)
uniModelOut_df[1]
uniModelOut_df[1,1]
uniModelOut_df[1,1][[1]]
names(uniModelOut_df[1,1][[1]])
str(uniModelOut_df[1,1][[1]])
str(uniModelOut_df[1,1][[1]], depth=1)
str(uniModelOut_df[1,1][[1]], max.level=1)
str(uniModelOut_df[1,1][[1]], max.level=2)
str(uniModelOut_df[1,1][[1]]$summaries, max.level=2)
str(uniModelOut_df[1,1][[1]]$summaries, max.level=2)
str(uniModelOut_df[1,1][[1]][[1]]$summaries, max.level=2)
thing <- uniModelOut_df %>% rowwise %>%
do({
aSummary <- .[[1]][[1]]$summaries
data_frame(summary=aSummary)
})
thing <- uniModelOut_df %>% rowwise %>%
do({
aSummary <- .[[1]][[1]]$summaries
data_frame(summary=list(aSummary))
})
thing
thing <- uniModelOut_df %>% rowwise %>%
do({
aSummary <- .[[1]]$summaries
data_frame(summary=list(aSummary))
})
thing
thing <- uniModelOut_df %>% rowwise %>%
do({
aSummary <- .[[1]]$summaries
data_frame(aSummary)
})
thing <- uniModelOut_df %>% rowwise %>%
do({
aSummary <- .[[1]]$summaries
as_data_frame(aSummary)
})
thing
summaries <- uniModelOut_df %>% rowwise %>%
do({
aSummary <- .[[1]]$summaries
as_data_frame(aSummary)
})
summaries <- uniModelOut_df %>% rowwise %>%
do({
aSummary <- .[[1]]$summaries
as_data_frame(aSummary)
}) %>%
extract(Title,
c('sample', 'variable', 'modelType'),
'PxVx Univariate - ([\\w_]+) ([\\w_]+)')
summaries <- uniModelOut_df %>% rowwise %>%
do({
aSummary <- .[[1]]$summaries
as_data_frame(aSummary)
}) %>%
extract(Title,
c('sample', 'variable', 'modelType'),
'PxVx Univariate - (\\w+) ([\\w_]+) ([\\w_]+)')
summaries
