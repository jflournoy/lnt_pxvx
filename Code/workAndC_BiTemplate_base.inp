[[init]]
iterators = subset eventType Xwhich Ywhich;

subset = 1:3;
eventType = 1;
Xwhich = 1:6;
Ywhich = 1:4;


subsetNames#subset = "Nat Empl" "Nat" "Col";
subsetMeanAge#subset = 37 37 20;
eventTypeName#eventType = "-Base";
eventTypeVarName#eventType = NULL;
varX#Xwhich = bfi_c bfi_a bfi_e bfi_n bfi_o bfi_hp;
varY#Ywhich = UNI invjob aspfin goalec;

filename="ALT-[[varX#Xwhich]]-[[varY#Ywhich]]-[[subsetNames#subset]][[eventTypeName#eventType]].inp";
outputDirectory="C:\Users\jackflibb\Documents\UO\Life and Times\Work and Concientiousness\SEM\automated\BiModels\[[varX#Xwhich]]-[[varY#Ywhich]]";
[[/init]]

title: Work and C - [[varX#Xwhich]]-[[varY#Ywhich]][[subsetNames#subset]][[eventTypeName#eventType]];

data: 
file = C:\Users\jackflibb\Documents\UO\Life and Times\Work and Concientiousness\SEM\workAndC.dat;

variable: 
names =
abfi_c
bbfi_c
cbfi_c
dbfi_c
abfi_a
bbfi_a
cbfi_a
dbfi_a
abfi_e
bbfi_e
cbfi_e
dbfi_e
abfi_n
bbfi_n
cbfi_n
dbfi_n
abfi_o
bbfi_o
cbfi_o
dbfi_o
abfi_hp
bbfi_hp
cbfi_hp
dbfi_hp
aage
bage
cage
dage
ainvjob
binvjob
cinvjob
dinvjob
aaspfin
baspfin
caspfin
daspfin
agoalec
bgoalec
cgoalec
dgoalec
aEvent5 !Got a new job
bEvent5 !Got a new job
cEvent5 !Got a new job
dEvent5 !Got a new job
aEvent6 !Got promoted or higher status
bEvent6 !Got promoted or higher status
cEvent6 !Got promoted or higher status
dEvent6 !Got promoted or higher status
aEvent9 !Increase in work responsibilities
bEvent9 !Increase in work responsibilities
cEvent9 !Increase in work responsibilities
dEvent9 !Increase in work responsibilities
aemploy !1 = yes 2 = no
bemploy !1 = yes 2 = no
cemploy !1 = yes 2 = no
demploy !1 = yes 2 = no
agender !1 = male 2 = female
aSubsam !1 = national, 2 = college
;

USEVARIABLES =
a[[varX#Xwhich]]
b[[varX#Xwhich]]
c[[varX#Xwhich]]
d[[varX#Xwhich]]
[[Ywhich > 1]]
	a[[varY#Ywhich]]
	b[[varY#Ywhich]]
	c[[varY#Ywhich]]
	d[[varY#Ywhich]]
[[/Ywhich > 1]]
bage_c
cage_c
dage_c
[[eventType==2]]
aIncJob
bIncJob
cIncJob
dIncJob
[[/eventType==2]]
[[eventType==3]]
aNewJob
bNewJob
cNewJob
dNewJob
[[/eventType==3]]
;

missing = all (-99999);

[[subset == 1]]
USEOBSERVATIONS are aemploy not eq 2 AND bemploy not eq 2 
	AND cemploy not eq 2 AND demploy not eq 2 ! No unemployed people
	AND aSubsam == 1;!National Sample
[[/subset == 1]]
[[subset == 2]]
USEOBSERVATIONS aSubsam == 1; ! National Sample
[[/subset == 2]]
[[subset == 3]]
USEOBSERVATIONS aSubsam == 2; ! College Sample
[[/subset == 3]]

tscores = bage_c cage_c dage_c;

DEFINE:
bage_c = bage - [[subsetMeanAge#subset]];
cage_c = cage - [[subsetMeanAge#subset]];
dage_c = dage - [[subsetMeanAge#subset]];

[[eventType==2]]
if aEvent6 == 1 OR aEvent9 == 1 then aIncJob = 1;
if bEvent6 == 1 OR bEvent9 == 1 then bIncJob = 1;
if cEvent6 == 1 OR cEvent9 == 1 then cIncJob = 1;
if dEvent6 == 1 OR dEvent9 == 1 then dIncJob = 1;

if aEvent6 == _missing AND aEvent9 == _missing then aIncJob = 0;
if bEvent6 == _missing AND bEvent9 == _missing then bIncJob = 0;
if cEvent6 == _missing AND cEvent9 == _missing then cIncJob = 0;
if dEvent6 == _missing AND dEvent9 == _missing then dIncJob = 0;
[[/eventType==2]]

[[eventType==3]]
if aEvent5 == 1 then aNewJob = 1;
if bEvent5 == 1 then bNewJob = 1;
if cEvent5 == 1 then cNewJob = 1;
if dEvent5 == 1 then dNewJob = 1;

if aEvent5 == _missing then aNewJob = 0;
if bEvent5 == _missing then bNewJob = 0;
if cEvent5 == _missing then cNewJob = 0;
if dEvent5 == _missing then dNewJob = 0;
[[/eventType==3]]

ANALYSIS:
TYPE=RANDOM;
PROCESSORS = 8; 

MODEL:

i_[[varX#Xwhich]] s_[[varX#Xwhich]] | b[[varX#Xwhich]] c[[varX#Xwhich]] d[[varX#Xwhich]] AT bage_c cage_c dage_c;

!After Bollen and Curran initial observation is not part of LT

d[[varX#Xwhich]] on c[[varX#Xwhich]] (a); ! Autoregressive effect constrained 
c[[varX#Xwhich]] on b[[varX#Xwhich]] (a);
b[[varX#Xwhich]] on a[[varX#Xwhich]];

b[[varX#Xwhich]] c[[varX#Xwhich]] d[[varX#Xwhich]] (b); !Equality constraint on residuals

[[eventType > 1]]
a[[varX#Xwhich]] on a[[eventTypeVarName#eventType]] (c); !Eq const on effect of event
b[[varX#Xwhich]] on b[[eventTypeVarName#eventType]] (c);
c[[varX#Xwhich]] on c[[eventTypeVarName#eventType]] (c);
d[[varX#Xwhich]] on d[[eventTypeVarName#eventType]] (c);
[[/eventType > 1]]

[[Ywhich == 1]]
a[[varX#Xwhich]] [[eventType > 1]] a[[eventTypeVarName#eventType]] b[[eventTypeVarName#eventType]] c[[eventTypeVarName#eventType]] d[[eventTypeVarName#eventType]] [[/eventType > 1]] i_[[varX#Xwhich]] s_[[varX#Xwhich]] WITH
a[[varX#Xwhich]] [[eventType > 1]] a[[eventTypeVarName#eventType]] b[[eventTypeVarName#eventType]] c[[eventTypeVarName#eventType]] d[[eventTypeVarName#eventType]] [[/eventType > 1]] i_[[varX#Xwhich]] s_[[varX#Xwhich]];
[[/Ywhich == 1]]

[[Ywhich > 1]]
!----Second Outcome of Interest [[varY#Ywhich]]
i_[[varY#Ywhich]] s_[[varY#Ywhich]] | b[[varY#Ywhich]] c[[varY#Ywhich]] d[[varY#Ywhich]] AT bage_c cage_c dage_c;

d[[varY#Ywhich]] on c[[varY#Ywhich]] (z); ! Autoregressive effect constrained 
c[[varY#Ywhich]] on b[[varY#Ywhich]] (z);
b[[varY#Ywhich]] on a[[varY#Ywhich]];

d[[varX#Xwhich]] on c[[varY#Ywhich]] (y); ![[varY#Ywhich]] to [[varX#Xwhich]] x-lag effect constrained
c[[varX#Xwhich]] on b[[varY#Ywhich]] (y);
b[[varX#Xwhich]] on a[[varY#Ywhich]];

d[[varY#Ywhich]] on c[[varX#Xwhich]] (x); ![[varX#Xwhich]] to [[varY#Ywhich]] x-lag effect constrained
c[[varY#Ywhich]] on b[[varX#Xwhich]] (x);
b[[varY#Ywhich]] on a[[varX#Xwhich]];

b[[varX#Xwhich]] with b[[varY#Ywhich]] (w); !Within wave correlation constrained
c[[varX#Xwhich]] with c[[varY#Ywhich]] (w);
d[[varX#Xwhich]] with d[[varY#Ywhich]] (w);

b[[varY#Ywhich]] c[[varY#Ywhich]] d[[varY#Ywhich]] (v); !Equality constraint on residuals

[[eventType > 1]]
a[[varY#Ywhich]] on a[[eventTypeVarName#eventType]] (u); !Eq const on effect of event
b[[varY#Ywhich]] on b[[eventTypeVarName#eventType]] (u);
c[[varY#Ywhich]] on c[[eventTypeVarName#eventType]] (u);
d[[varY#Ywhich]] on d[[eventTypeVarName#eventType]] (u);
[[/eventType > 1]]

a[[varX#Xwhich]] a[[varY#Ywhich]] [[eventType > 1]] a[[eventTypeVarName#eventType]] b[[eventTypeVarName#eventType]] c[[eventTypeVarName#eventType]] d[[eventTypeVarName#eventType]] [[/eventType > 1]] i_[[varX#Xwhich]]  s_[[varX#Xwhich]] i_[[varY#Ywhich]] s_[[varY#Ywhich]] WITH
a[[varX#Xwhich]] a[[varY#Ywhich]] [[eventType > 1]] a[[eventTypeVarName#eventType]] b[[eventTypeVarName#eventType]] c[[eventTypeVarName#eventType]] d[[eventTypeVarName#eventType]] [[/eventType > 1]] i_[[varX#Xwhich]]  s_[[varX#Xwhich]] i_[[varY#Ywhich]] s_[[varY#Ywhich]];
[[/Ywhich > 1]]

OUTPUT: SAMPSTAT PATTERNS;